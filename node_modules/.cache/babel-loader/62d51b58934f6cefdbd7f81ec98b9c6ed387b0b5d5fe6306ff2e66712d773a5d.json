{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref } from 'vue';\nimport axios from 'axios';\nimport Swal from 'sweetalert2'; // Certifique-se de importar o Swal corretamente\nimport Cookies from 'js-cookie';\nexport default {\n  name: \"Login\",\n  setup() {\n    const credentials = ref({\n      email: '',\n      password: ''\n    });\n    const showStorageNotice = ref(false);\n    let authToken = ''; // Variável para armazenar o token\n\n    const submit = async () => {\n      if (!checkValidation()) {\n        return;\n      }\n      try {\n        const response = await axios.post('https://localhost:3000/Users/Login', credentials.value, {\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        });\n        console.log(\"Login bem-sucedido\");\n\n        // Supondo que a API retorne um token após o login bem-sucedido\n        authToken = response.data.token;\n\n        // Exibir o aviso de armazenamento\n        showStorageNotice.value = true;\n      } catch (error) {\n        console.error('Erro ao fazer login:', error);\n        Swal.fire(\"Falha no login. Por favor, verifique suas credenciais.\");\n      }\n    };\n    const checkValidation = () => {\n      if (!credentials.value.email) {\n        Swal.fire(\"Por favor, informe seu email.\");\n        return false;\n      }\n      if (!credentials.value.password) {\n        Swal.fire(\"Por favor, informe sua senha.\");\n        return false;\n      }\n      return true;\n    };\n    const acceptStorage = () => {\n      // Armazenar o token em um cookie\n      Cookies.set('authToken', authToken);\n\n      // Redirecionar para a rota apropriada após o login bem-sucedido\n      this.$router.push('/dashboard');\n\n      // Fechar o aviso de armazenamento\n      showStorageNotice.value = false;\n    };\n    const declineStorage = () => {\n      // Fechar o aviso de armazenamento\n      showStorageNotice.value = false;\n    };\n    return {\n      credentials,\n      showStorageNotice,\n      submit,\n      checkValidation,\n      acceptStorage,\n      declineStorage\n    };\n  }\n};","map":{"version":3,"names":["ref","axios","Swal","Cookies","name","setup","credentials","email","password","showStorageNotice","authToken","submit","checkValidation","response","post","value","headers","console","log","data","token","error","fire","acceptStorage","set","$router","push","declineStorage"],"sources":["C:\\Users\\11\\Desktop\\frontend\\src\\components\\Login.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <form @submit.prevent=\"submit\">\r\n      <!-- Campos de login: email e senha -->\r\n      <label for=\"email\">Email:</label>\r\n      <input type=\"email\" v-model=\"credentials.email\" required>\r\n\r\n      <label for=\"password\">Senha:</label>\r\n      <input type=\"password\" v-model=\"credentials.password\" required>\r\n\r\n      <button type=\"submit\">Entrar</button>\r\n    </form>\r\n\r\n    <!-- Modal de aviso de armazenamento -->\r\n    <div v-if=\"showStorageNotice\" class=\"modal\">\r\n      <div class=\"modal-content\">\r\n        <p>Esta aplicação deseja armazenar um token de autenticação no seu navegador. Você aceita?</p>\r\n        <button @click=\"acceptStorage\">Aceitar</button>\r\n        <button @click=\"declineStorage\">Recusar</button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref } from 'vue';\r\nimport axios from 'axios';\r\nimport Swal from 'sweetalert2'; // Certifique-se de importar o Swal corretamente\r\nimport Cookies from 'js-cookie';\r\n\r\nexport default {\r\n  name: \"Login\",\r\n  setup() {\r\n    const credentials = ref({\r\n      email: '',\r\n      password: '',\r\n    });\r\n\r\n    const showStorageNotice = ref(false);\r\n    let authToken = ''; // Variável para armazenar o token\r\n\r\n    const submit = async () => {\r\n      if (!checkValidation()) {\r\n        return;\r\n      }\r\n\r\n      try {\r\n        const response = await axios.post('https://localhost:3000/Users/Login', credentials.value, {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        });\r\n        console.log(\"Login bem-sucedido\");\r\n        \r\n        // Supondo que a API retorne um token após o login bem-sucedido\r\n        authToken = response.data.token;\r\n\r\n        // Exibir o aviso de armazenamento\r\n        showStorageNotice.value = true;\r\n      } catch (error) {\r\n        console.error('Erro ao fazer login:', error);\r\n        Swal.fire(\"Falha no login. Por favor, verifique suas credenciais.\");\r\n      }\r\n    };\r\n\r\n    const checkValidation = () => {\r\n      if (!credentials.value.email) {\r\n        Swal.fire(\"Por favor, informe seu email.\");\r\n        return false;\r\n      }\r\n      \r\n      if (!credentials.value.password) {\r\n        Swal.fire(\"Por favor, informe sua senha.\");\r\n        return false;\r\n      }\r\n\r\n      return true;\r\n    };\r\n\r\n    const acceptStorage = () => {\r\n      // Armazenar o token em um cookie\r\n      Cookies.set('authToken', authToken);\r\n\r\n      // Redirecionar para a rota apropriada após o login bem-sucedido\r\n      this.$router.push('/dashboard');\r\n\r\n      // Fechar o aviso de armazenamento\r\n      showStorageNotice.value = false;\r\n    };\r\n\r\n    const declineStorage = () => {\r\n      // Fechar o aviso de armazenamento\r\n      showStorageNotice.value = false;\r\n    };\r\n\r\n    return {\r\n      credentials,\r\n      showStorageNotice,\r\n      submit,\r\n      checkValidation,\r\n      acceptStorage,\r\n      declineStorage,\r\n    };\r\n  },\r\n};\r\n</script>\r\n\r\n\r\n<style scoped>\r\n.container{\r\n    max-width: 360px;\r\n    }\r\n\r\n</style>"],"mappings":";AAyBA,SAASA,GAAE,QAAS,KAAK;AACzB,OAAOC,KAAI,MAAO,OAAO;AACzB,OAAOC,IAAG,MAAO,aAAa,EAAE;AAChC,OAAOC,OAAM,MAAO,WAAW;AAE/B,eAAe;EACbC,IAAI,EAAE,OAAO;EACbC,KAAKA,CAAA,EAAG;IACN,MAAMC,WAAU,GAAIN,GAAG,CAAC;MACtBO,KAAK,EAAE,EAAE;MACTC,QAAQ,EAAE;IACZ,CAAC,CAAC;IAEF,MAAMC,iBAAgB,GAAIT,GAAG,CAAC,KAAK,CAAC;IACpC,IAAIU,SAAQ,GAAI,EAAE,EAAE;;IAEpB,MAAMC,MAAK,GAAI,MAAAA,CAAA,KAAY;MACzB,IAAI,CAACC,eAAe,CAAC,CAAC,EAAE;QACtB;MACF;MAEA,IAAI;QACF,MAAMC,QAAO,GAAI,MAAMZ,KAAK,CAACa,IAAI,CAAC,oCAAoC,EAAER,WAAW,CAACS,KAAK,EAAE;UACzFC,OAAO,EAAE;YACP,cAAc,EAAE;UAClB;QACF,CAAC,CAAC;QACFC,OAAO,CAACC,GAAG,CAAC,oBAAoB,CAAC;;QAEjC;QACAR,SAAQ,GAAIG,QAAQ,CAACM,IAAI,CAACC,KAAK;;QAE/B;QACAX,iBAAiB,CAACM,KAAI,GAAI,IAAI;MAChC,EAAE,OAAOM,KAAK,EAAE;QACdJ,OAAO,CAACI,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;QAC5CnB,IAAI,CAACoB,IAAI,CAAC,wDAAwD,CAAC;MACrE;IACF,CAAC;IAED,MAAMV,eAAc,GAAIA,CAAA,KAAM;MAC5B,IAAI,CAACN,WAAW,CAACS,KAAK,CAACR,KAAK,EAAE;QAC5BL,IAAI,CAACoB,IAAI,CAAC,+BAA+B,CAAC;QAC1C,OAAO,KAAK;MACd;MAEA,IAAI,CAAChB,WAAW,CAACS,KAAK,CAACP,QAAQ,EAAE;QAC/BN,IAAI,CAACoB,IAAI,CAAC,+BAA+B,CAAC;QAC1C,OAAO,KAAK;MACd;MAEA,OAAO,IAAI;IACb,CAAC;IAED,MAAMC,aAAY,GAAIA,CAAA,KAAM;MAC1B;MACApB,OAAO,CAACqB,GAAG,CAAC,WAAW,EAAEd,SAAS,CAAC;;MAEnC;MACA,IAAI,CAACe,OAAO,CAACC,IAAI,CAAC,YAAY,CAAC;;MAE/B;MACAjB,iBAAiB,CAACM,KAAI,GAAI,KAAK;IACjC,CAAC;IAED,MAAMY,cAAa,GAAIA,CAAA,KAAM;MAC3B;MACAlB,iBAAiB,CAACM,KAAI,GAAI,KAAK;IACjC,CAAC;IAED,OAAO;MACLT,WAAW;MACXG,iBAAiB;MACjBE,MAAM;MACNC,eAAe;MACfW,aAAa;MACbI;IACF,CAAC;EACH;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}