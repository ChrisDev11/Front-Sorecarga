{"ast":null,"code":"import _defineProperty from \"C:/Users/11/Desktop/frontend/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\n// PayloadGenerator.js\n\n// Define a classe Payload\nclass Payload {\n  // Construtor da classe\n  constructor() {\n    this.pixKey = '10594184959';\n    this.description = '';\n    this.merchantName = 'Christian Pedro Custodio';\n    this.merchantCity = 'Blumenau';\n    this.txid = 'Teste1';\n    this.amount = '';\n    this.uniquePayment = false;\n    this.url = '';\n  }\n\n  // Define o valor de pixKey\n  setPixKey(pixKey) {\n    this.pixKey = pixKey;\n    return this;\n  }\n\n  // Define o valor de uniquePayment\n  setUniquePayment(uniquePayment) {\n    this.uniquePayment = uniquePayment;\n    return this;\n  }\n\n  // Define o valor de url\n  setUrl(url) {\n    this.url = url;\n    return this;\n  }\n\n  // Define o valor de description\n  setDescription(description) {\n    this.description = description;\n    return this;\n  }\n\n  // Define o valor de merchantName\n  setMerchantName(merchantName) {\n    this.merchantName = merchantName;\n    return this;\n  }\n\n  // Define o valor de merchantCity\n  setMerchantCity(merchantCity) {\n    this.merchantCity = merchantCity;\n    return this;\n  }\n\n  // Define o valor de txid\n  setTxid(txid) {\n    this.txid = txid;\n    return this;\n  }\n\n  // Define o valor de amount\n  setAmount(amount) {\n    this.amount = amount.toFixed(2);\n    return this;\n  }\n\n  // Retorna o valor completo de um objeto do payload\n  getValue(id, value) {\n    const size = value.length.toString().padStart(2, '0');\n    return id + size + value;\n  }\n\n  // Retorna os valores completos da informação da conta\n  getMerchantAccountInformation() {\n    // DOMÍNIO DO BANCO\n    const gui = this.getValue(Payload.ID_MERCHANT_ACCOUNT_INFORMATION_GUI, 'br.gov.bcb.pix');\n\n    // CHAVE PIX\n    const key = this.pixKey.length > 0 ? this.getValue(Payload.ID_MERCHANT_ACCOUNT_INFORMATION_KEY, this.pixKey) : '';\n\n    // DESCRIÇÃO DO PAGAMENTO\n    const description = this.description.length > 0 ? this.getValue(Payload.ID_MERCHANT_ACCOUNT_INFORMATION_DESCRIPTION, this.description) : '';\n\n    // URL DO QR CODE DINÂMICO\n    const url = this.url.length > 0 ? this.getValue(Payload.ID_MERCHANT_ACCOUNT_INFORMATION_URL, this.url.replace(/^https?:\\/\\//, '')) : '';\n\n    // VALOR COMPLETO DA CONTA\n    return this.getValue(Payload.ID_MERCHANT_ACCOUNT_INFORMATION, gui + key + description + url);\n  }\n\n  // Retorna os valores completos do campo adicional do pix (TXID)\n  getAdditionalDataFieldTemplate() {\n    // TXID\n    const txid = this.getValue(Payload.ID_ADDITIONAL_DATA_FIELD_TEMPLATE_TXID, this.txid);\n\n    // RETORNA O VALOR COMPLETO\n    return this.getValue(Payload.ID_ADDITIONAL_DATA_FIELD_TEMPLATE, txid);\n  }\n\n  // Retorna o valor do ID_POINT_OF_INITIATION_METHOD\n  getUniquePayment() {\n    return this.uniquePayment ? this.getValue(Payload.ID_POINT_OF_INITIATION_METHOD, '12') : '';\n  }\n\n  // Gera o código completo do payload Pix\n  generatePayload() {\n    // CRIA O PAYLOAD\n    const payload = this.getValue(Payload.ID_PAYLOAD_FORMAT_INDICATOR, '01') + this.getUniquePayment() + this.getMerchantAccountInformation() + this.getValue(Payload.ID_MERCHANT_CATEGORY_CODE, '0000') + this.getValue(Payload.ID_TRANSACTION_CURRENCY, '986') + this.getValue(Payload.ID_TRANSACTION_AMOUNT, this.amount) + this.getValue(Payload.ID_COUNTRY_CODE, 'BR') + this.getValue(Payload.ID_MERCHANT_NAME, this.merchantName) + this.getValue(Payload.ID_MERCHANT_CITY, this.merchantCity) + this.getAdditionalDataFieldTemplate();\n\n    // RETORNA O PAYLOAD + CRC16\n    return payload + this.getCRC16(payload);\n  }\n\n  // Calcula o valor da hash de validação do código pix\n  getCRC16(payload) {\n    // ADICIONA DADOS GERAIS NO PAYLOAD\n    payload += Payload.ID_CRC16 + '04';\n\n    // DADOS DEFINIDOS PELO BACEN\n    const polinomio = 0x1021;\n    let resultado = 0xFFFF;\n\n    // CHECKSUM\n    if (payload.length > 0) {\n      for (let offset = 0; offset < payload.length; offset++) {\n        resultado ^= payload.charCodeAt(offset) << 8;\n        for (let bitwise = 0; bitwise < 8; bitwise++) {\n          if ((resultado <<= 1) & 0x10000) {\n            resultado ^= polinomio;\n          }\n          resultado &= 0xFFFF;\n        }\n      }\n    }\n\n    // RETORNA CÓDIGO CRC16 DE 4 CARACTERES\n    return Payload.ID_CRC16 + '04' + resultado.toString(16).toUpperCase().padStart(4, '0');\n  }\n}\n\n// Exporte a classe Payload\n// IDs do Payload do Pix\n_defineProperty(Payload, \"ID_PAYLOAD_FORMAT_INDICATOR\", '00');\n_defineProperty(Payload, \"ID_POINT_OF_INITIATION_METHOD\", '01');\n_defineProperty(Payload, \"ID_MERCHANT_ACCOUNT_INFORMATION\", '26');\n_defineProperty(Payload, \"ID_MERCHANT_ACCOUNT_INFORMATION_GUI\", '00');\n_defineProperty(Payload, \"ID_MERCHANT_ACCOUNT_INFORMATION_KEY\", '01');\n_defineProperty(Payload, \"ID_MERCHANT_ACCOUNT_INFORMATION_DESCRIPTION\", '02');\n_defineProperty(Payload, \"ID_MERCHANT_ACCOUNT_INFORMATION_URL\", '25');\n_defineProperty(Payload, \"ID_MERCHANT_CATEGORY_CODE\", '52');\n_defineProperty(Payload, \"ID_TRANSACTION_CURRENCY\", '53');\n_defineProperty(Payload, \"ID_TRANSACTION_AMOUNT\", '54');\n_defineProperty(Payload, \"ID_COUNTRY_CODE\", '58');\n_defineProperty(Payload, \"ID_MERCHANT_NAME\", '59');\n_defineProperty(Payload, \"ID_MERCHANT_CITY\", '60');\n_defineProperty(Payload, \"ID_ADDITIONAL_DATA_FIELD_TEMPLATE\", '62');\n_defineProperty(Payload, \"ID_ADDITIONAL_DATA_FIELD_TEMPLATE_TXID\", '05');\n_defineProperty(Payload, \"ID_CRC16\", '63');\nexport default Payload;","map":{"version":3,"names":["Payload","constructor","pixKey","description","merchantName","merchantCity","txid","amount","uniquePayment","url","setPixKey","setUniquePayment","setUrl","setDescription","setMerchantName","setMerchantCity","setTxid","setAmount","toFixed","getValue","id","value","size","length","toString","padStart","getMerchantAccountInformation","gui","ID_MERCHANT_ACCOUNT_INFORMATION_GUI","key","ID_MERCHANT_ACCOUNT_INFORMATION_KEY","ID_MERCHANT_ACCOUNT_INFORMATION_DESCRIPTION","ID_MERCHANT_ACCOUNT_INFORMATION_URL","replace","ID_MERCHANT_ACCOUNT_INFORMATION","getAdditionalDataFieldTemplate","ID_ADDITIONAL_DATA_FIELD_TEMPLATE_TXID","ID_ADDITIONAL_DATA_FIELD_TEMPLATE","getUniquePayment","ID_POINT_OF_INITIATION_METHOD","generatePayload","payload","ID_PAYLOAD_FORMAT_INDICATOR","ID_MERCHANT_CATEGORY_CODE","ID_TRANSACTION_CURRENCY","ID_TRANSACTION_AMOUNT","ID_COUNTRY_CODE","ID_MERCHANT_NAME","ID_MERCHANT_CITY","getCRC16","ID_CRC16","polinomio","resultado","offset","charCodeAt","bitwise","toUpperCase","_defineProperty"],"sources":["C:/Users/11/Desktop/frontend/src/components/Pix/PayloadGenerator.js"],"sourcesContent":["// PayloadGenerator.js\r\n\r\n// Define a classe Payload\r\nclass Payload {\r\n    // IDs do Payload do Pix\r\n    static ID_PAYLOAD_FORMAT_INDICATOR = '00';\r\n    static ID_POINT_OF_INITIATION_METHOD = '01';\r\n    static ID_MERCHANT_ACCOUNT_INFORMATION = '26';\r\n    static ID_MERCHANT_ACCOUNT_INFORMATION_GUI = '00';\r\n    static ID_MERCHANT_ACCOUNT_INFORMATION_KEY = '01';\r\n    static ID_MERCHANT_ACCOUNT_INFORMATION_DESCRIPTION = '02';\r\n    static ID_MERCHANT_ACCOUNT_INFORMATION_URL = '25';\r\n    static ID_MERCHANT_CATEGORY_CODE = '52';\r\n    static ID_TRANSACTION_CURRENCY = '53';\r\n    static ID_TRANSACTION_AMOUNT = '54';\r\n    static ID_COUNTRY_CODE = '58';\r\n    static ID_MERCHANT_NAME = '59';\r\n    static ID_MERCHANT_CITY = '60';\r\n    static ID_ADDITIONAL_DATA_FIELD_TEMPLATE = '62';\r\n    static ID_ADDITIONAL_DATA_FIELD_TEMPLATE_TXID = '05';\r\n    static ID_CRC16 = '63';\r\n  \r\n    // Construtor da classe\r\n    constructor() {\r\n      this.pixKey = '10594184959';\r\n      this.description = '';\r\n      this.merchantName = 'Christian Pedro Custodio';\r\n      this.merchantCity = 'Blumenau';\r\n      this.txid = 'Teste1';\r\n      this.amount = '';\r\n      this.uniquePayment = false;\r\n      this.url = '';\r\n    }\r\n  \r\n    // Define o valor de pixKey\r\n    setPixKey(pixKey) {\r\n      this.pixKey = pixKey;\r\n      return this;\r\n    }\r\n  \r\n    // Define o valor de uniquePayment\r\n    setUniquePayment(uniquePayment) {\r\n      this.uniquePayment = uniquePayment;\r\n      return this;\r\n    }\r\n  \r\n    // Define o valor de url\r\n    setUrl(url) {\r\n      this.url = url;\r\n      return this;\r\n    }\r\n  \r\n    // Define o valor de description\r\n    setDescription(description) {\r\n      this.description = description;\r\n      return this;\r\n    }\r\n  \r\n    // Define o valor de merchantName\r\n    setMerchantName(merchantName) {\r\n      this.merchantName = merchantName;\r\n      return this;\r\n    }\r\n  \r\n    // Define o valor de merchantCity\r\n    setMerchantCity(merchantCity) {\r\n      this.merchantCity = merchantCity;\r\n      return this;\r\n    }\r\n  \r\n    // Define o valor de txid\r\n    setTxid(txid) {\r\n      this.txid = txid;\r\n      return this;\r\n    }\r\n  \r\n    // Define o valor de amount\r\n    setAmount(amount) {\r\n    this.amount = amount.toFixed(2);\r\n    return this;\r\n    }\r\n\r\n    \r\n  \r\n    // Retorna o valor completo de um objeto do payload\r\n    getValue(id, value) {\r\n      const size = value.length.toString().padStart(2, '0');\r\n      return id + size + value;\r\n    }\r\n  \r\n    // Retorna os valores completos da informação da conta\r\n    getMerchantAccountInformation() {\r\n      // DOMÍNIO DO BANCO\r\n      const gui = this.getValue(\r\n        Payload.ID_MERCHANT_ACCOUNT_INFORMATION_GUI,\r\n        'br.gov.bcb.pix'\r\n      );\r\n  \r\n      // CHAVE PIX\r\n      const key =\r\n        this.pixKey.length > 0\r\n          ? this.getValue(Payload.ID_MERCHANT_ACCOUNT_INFORMATION_KEY, this.pixKey)\r\n          : '';\r\n  \r\n      // DESCRIÇÃO DO PAGAMENTO\r\n      const description =\r\n        this.description.length > 0\r\n          ? this.getValue(\r\n              Payload.ID_MERCHANT_ACCOUNT_INFORMATION_DESCRIPTION,\r\n              this.description\r\n            )\r\n          : '';\r\n  \r\n      // URL DO QR CODE DINÂMICO\r\n      const url =\r\n        this.url.length > 0\r\n          ? this.getValue(\r\n              Payload.ID_MERCHANT_ACCOUNT_INFORMATION_URL,\r\n              this.url.replace(/^https?:\\/\\//, '')\r\n            )\r\n          : '';\r\n  \r\n      // VALOR COMPLETO DA CONTA\r\n      return this.getValue(\r\n        Payload.ID_MERCHANT_ACCOUNT_INFORMATION,\r\n        gui + key + description + url\r\n      );\r\n    }\r\n  \r\n    // Retorna os valores completos do campo adicional do pix (TXID)\r\n    getAdditionalDataFieldTemplate() {\r\n      // TXID\r\n      const txid = this.getValue(\r\n        Payload.ID_ADDITIONAL_DATA_FIELD_TEMPLATE_TXID,\r\n        this.txid\r\n      );\r\n  \r\n      // RETORNA O VALOR COMPLETO\r\n      return this.getValue(\r\n        Payload.ID_ADDITIONAL_DATA_FIELD_TEMPLATE,\r\n        txid\r\n      );\r\n    }\r\n  \r\n    // Retorna o valor do ID_POINT_OF_INITIATION_METHOD\r\n    getUniquePayment() {\r\n      return this.uniquePayment\r\n        ? this.getValue(Payload.ID_POINT_OF_INITIATION_METHOD, '12')\r\n        : '';\r\n    }\r\n  \r\n    // Gera o código completo do payload Pix\r\n    generatePayload() {\r\n      // CRIA O PAYLOAD\r\n      const payload =\r\n        this.getValue(Payload.ID_PAYLOAD_FORMAT_INDICATOR, '01') +\r\n        this.getUniquePayment() +\r\n        this.getMerchantAccountInformation() +\r\n        this.getValue(Payload.ID_MERCHANT_CATEGORY_CODE, '0000') +\r\n        this.getValue(Payload.ID_TRANSACTION_CURRENCY, '986') +\r\n        this.getValue(Payload.ID_TRANSACTION_AMOUNT, this.amount) +\r\n        this.getValue(Payload.ID_COUNTRY_CODE, 'BR') +\r\n        this.getValue(Payload.ID_MERCHANT_NAME, this.merchantName) +\r\n        this.getValue(Payload.ID_MERCHANT_CITY, this.merchantCity) +\r\n        this.getAdditionalDataFieldTemplate();\r\n  \r\n      // RETORNA O PAYLOAD + CRC16\r\n      return payload + this.getCRC16(payload);\r\n    }\r\n  \r\n    // Calcula o valor da hash de validação do código pix\r\n    getCRC16(payload) {\r\n      // ADICIONA DADOS GERAIS NO PAYLOAD\r\n      payload += Payload.ID_CRC16 + '04';\r\n  \r\n      // DADOS DEFINIDOS PELO BACEN\r\n      const polinomio = 0x1021;\r\n      let resultado = 0xFFFF;\r\n  \r\n      // CHECKSUM\r\n      if (payload.length > 0) {\r\n        for (let offset = 0; offset < payload.length; offset++) {\r\n          resultado ^= (payload.charCodeAt(offset) << 8);\r\n          for (let bitwise = 0; bitwise < 8; bitwise++) {\r\n            if (((resultado <<= 1) & 0x10000)) {\r\n              resultado ^= polinomio;\r\n            }\r\n            resultado &= 0xFFFF;\r\n          }\r\n        }\r\n      }\r\n  \r\n      // RETORNA CÓDIGO CRC16 DE 4 CARACTERES\r\n      return (\r\n        Payload.ID_CRC16 + '04' + resultado.toString(16).toUpperCase().padStart(4, '0')\r\n      );\r\n    }\r\n  }\r\n  \r\n  // Exporte a classe Payload\r\n  export default Payload;\r\n  "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}