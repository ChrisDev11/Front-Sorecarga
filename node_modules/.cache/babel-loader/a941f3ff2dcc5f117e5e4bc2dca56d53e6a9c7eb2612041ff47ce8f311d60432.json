{"ast":null,"code":"import SideBarDash from \"@/components/SideBarDash.vue\";\nimport axios from \"axios\";\nexport default {\n  name: \"Neworder\",\n  components: {\n    SideBarDash\n  },\n  data() {\n    return {\n      endereco: \"https://rechargeapi.azurewebsites.net/\",\n      purchases: []\n    };\n  },\n  created() {\n    this.fetchPurchaseData();\n  },\n  methods: {\n    async fetchPurchaseData() {\n      try {\n        const response = await axios.get(`${this.endereco}/Purchase`);\n        const purchases = response.data;\n\n        // Criar uma lista de promessas para buscar os detalhes do usuário\n        const userDetailPromises = purchases.map(purchase => {\n          return axios.get(`${this.endereco}/Users/${purchase.userId}`).then(userResponse => {\n            // Adicionar o nome do usuário à compra\n            purchase.userName = userResponse.data.name;\n          });\n        });\n\n        // Esperar todas as promessas de detalhes do usuário serem resolvidas\n        await Promise.all(userDetailPromises);\n\n        // Atualize os dados de compra com os detalhes do usuário\n        this.purchases = purchases;\n      } catch (error) {\n        console.error('Erro ao buscar dados de compra:', error);\n      }\n    }\n  }\n};","map":{"version":3,"names":["SideBarDash","axios","name","components","data","endereco","purchases","created","fetchPurchaseData","methods","response","get","userDetailPromises","map","purchase","userId","then","userResponse","userName","Promise","all","error","console"],"sources":["C:\\Users\\11\\Desktop\\frontend\\src\\views\\PainelAdm\\Neworder.vue"],"sourcesContent":["<template>\r\n  \r\n    <div class=\"d-flex\">\r\n\r\n<SideBarDash class=\"flex-shrink-0\" />\r\n<div class=\"container\">\r\n<h1>Painel de Acompanhamento de Vendas</h1>\r\n\r\n    <!-- Tabela de Vendas -->\r\n    <table class=\"table\">\r\n      <thead>\r\n        <tr>\r\n          <th>Número da Venda</th>\r\n          <th>Nome do Cliente</th>\r\n          <th>Data da Compra</th>\r\n          <th>Processo</th>\r\n          <th>Confirmar Pagamento</th>\r\n          <!-- <th>Valor Total</th> -->\r\n          <th>Detalhes</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr v-for=\"purchase in purchases\" :key=\"purchase.id\">\r\n          <td>{{ purchase.id }}</td>\r\n          <td>{{ purchase.userName }}</td>\r\n          <td>{{ purchase.buyDate }}</td>\r\n          <td>{{ purchase.status }}</td>\r\n          <td>\r\n            <button>Confirmar</button>\r\n          </td>\r\n          <!-- <td>{{ purchase.payment }}</td> -->\r\n          \r\n          <td>\r\n            <button @click=\"viewDetails(purchase.id)\" class=\"btn btn-primary\">Detalhes</button>\r\n          </td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n\r\n</div>\r\n</div>\r\n\r\n\r\n</template>\r\n\r\n<script>\r\nimport SideBarDash from \"@/components/SideBarDash.vue\";\r\nimport axios from \"axios\";\r\n\r\nexport default {\r\n  name: \"Neworder\",\r\n  components: {\r\n    SideBarDash,\r\n  },\r\n  data() {\r\n    return {\r\n      endereco:\"https://rechargeapi.azurewebsites.net/\",\r\n      purchases: [],\r\n    };\r\n  },\r\n  created() {\r\n    this.fetchPurchaseData();\r\n  },\r\n  methods: {\r\n    async fetchPurchaseData() {\r\n      try {\r\n        const response = await axios.get(`${this.endereco}/Purchase`);\r\n        const purchases = response.data;\r\n\r\n        // Criar uma lista de promessas para buscar os detalhes do usuário\r\n        const userDetailPromises = purchases.map((purchase) => {\r\n          return axios.get(`${this.endereco}/Users/${purchase.userId}`)\r\n            .then((userResponse) => {\r\n              // Adicionar o nome do usuário à compra\r\n              purchase.userName = userResponse.data.name;\r\n            });\r\n        });\r\n\r\n        // Esperar todas as promessas de detalhes do usuário serem resolvidas\r\n        await Promise.all(userDetailPromises);\r\n\r\n        // Atualize os dados de compra com os detalhes do usuário\r\n        this.purchases = purchases;\r\n      } catch (error) {\r\n        console.error('Erro ao buscar dados de compra:', error);\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\n\r\n</style>\r\n"],"mappings":"AA8CA,OAAOA,WAAU,MAAO,8BAA8B;AACtD,OAAOC,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAI,EAAE,UAAU;EAChBC,UAAU,EAAE;IACVH;EACF,CAAC;EACDI,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,QAAQ,EAAC,wCAAwC;MACjDC,SAAS,EAAE;IACb,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,iBAAiB,CAAC,CAAC;EAC1B,CAAC;EACDC,OAAO,EAAE;IACP,MAAMD,iBAAiBA,CAAA,EAAG;MACxB,IAAI;QACF,MAAME,QAAO,GAAI,MAAMT,KAAK,CAACU,GAAG,CAAE,GAAE,IAAI,CAACN,QAAS,WAAU,CAAC;QAC7D,MAAMC,SAAQ,GAAII,QAAQ,CAACN,IAAI;;QAE/B;QACA,MAAMQ,kBAAiB,GAAIN,SAAS,CAACO,GAAG,CAAEC,QAAQ,IAAK;UACrD,OAAOb,KAAK,CAACU,GAAG,CAAE,GAAE,IAAI,CAACN,QAAS,UAASS,QAAQ,CAACC,MAAO,EAAC,EACzDC,IAAI,CAAEC,YAAY,IAAK;YACtB;YACAH,QAAQ,CAACI,QAAO,GAAID,YAAY,CAACb,IAAI,CAACF,IAAI;UAC5C,CAAC,CAAC;QACN,CAAC,CAAC;;QAEF;QACA,MAAMiB,OAAO,CAACC,GAAG,CAACR,kBAAkB,CAAC;;QAErC;QACA,IAAI,CAACN,SAAQ,GAAIA,SAAS;MAC5B,EAAE,OAAOe,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC;MACzD;IACF;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}