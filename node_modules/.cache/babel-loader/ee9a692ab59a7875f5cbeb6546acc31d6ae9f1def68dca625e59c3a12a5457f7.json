{"ast":null,"code":"import jsCookie from 'js-cookie';\nexport default {\n  nome: \"CheckOut\",\n  data() {\n    return {\n      step: 1,\n      cart: [],\n      cliente: {\n        nome: \"\",\n        cpf: \"\",\n        telefone: \"\",\n        email: \"\",\n        formaPagamento: \"\"\n      }\n    };\n  },\n  methods: {\n    getCartProductsFromCookies() {\n      const cartCookieName = this.getCartCookieName();\n      if (cartCookieName) {\n        const cartData = Cookies.getJSON(cartCookieName);\n        if (cartData) {\n          this.cart = cartData;\n        }\n      }\n    },\n    getCartCookieName() {\n      return Cookies.get('cart'); // Substitua 'cart' pelo nome correto do seu cookie\n    },\n\n    created() {\n      this.getCartProductsFromCookies();\n    },\n    // Incrementa a quantidade de um item no carrinho\n    incrementQuantity(index) {\n      this.cart[index].quantity++;\n    },\n    // Decrementa a quantidade de um item no carrinho\n    decrementQuantity(index) {\n      if (this.cart[index].quantity > 1) {\n        this.cart[index].quantity--;\n      }\n    },\n    // Remove um item do carrinho\n    removeItem(index) {\n      this.cart.splice(index, 1);\n    },\n    // Calcula o valor total do carrinho\n    calculateTotal() {\n      return this.cart.reduce((total, item) => total + item.price * item.quantity, 0);\n    },\n    nextStep() {\n      this.step++;\n    },\n    prevStep() {\n      this.step--;\n    }\n  }\n};","map":{"version":3,"names":["jsCookie","nome","data","step","cart","cliente","cpf","telefone","email","formaPagamento","methods","getCartProductsFromCookies","cartCookieName","getCartCookieName","cartData","Cookies","getJSON","get","created","incrementQuantity","index","quantity","decrementQuantity","removeItem","splice","calculateTotal","reduce","total","item","price","nextStep","prevStep"],"sources":["C:\\Users\\11\\Desktop\\frontend\\src\\components\\CheckOut.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <h2>Check-out</h2>\r\n    <div v-if=\"step === 1\">\r\n      <!-- Etapa 1: Conferência de produtos -->\r\n      <h3>Conferência de Produtos</h3>\r\n      <table class=\"cart-table\">\r\n        <thead>\r\n          <tr>\r\n            <th>Produto</th>\r\n            <th>Preço Unitário</th>\r\n            <th>Quantidade</th>\r\n            <th>Total</th>\r\n            <th>Ações</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <!-- Loop through the cart items and display them -->\r\n          <tr v-for=\"(item, index) in cart\" :key=\"index\">\r\n            <td>{{ item.name }}</td>\r\n            <td>R$ {{ item.price.toFixed(2) }}</td>\r\n            <td>\r\n              <button @click=\"decrementQuantity(index)\">-</button>\r\n              {{ item.quantity }}\r\n              <button @click=\"incrementQuantity(index)\">+</button>\r\n            </td>\r\n            <td>R$ {{ (item.price * item.quantity).toFixed(2) }}</td>\r\n            <td>\r\n              <button @click=\"removeItem(index)\">X</button>\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n      <div class=\"total\">\r\n        Total:\r\n        <span class=\"green-text\">R$ {{ calculateTotal().toFixed(2) }}</span>\r\n      </div>\r\n      <button @click=\"nextStep\">Prosseguir Compra</button>\r\n    </div>\r\n    <div v-else-if=\"step === 2\">\r\n      <!-- Etapa 2: Dados do Cliente -->\r\n      <h3>Dados do Cliente</h3>\r\n      <form>\r\n        <div class=\"form-group\">\r\n          <label for=\"nome\">Nome:</label>\r\n          <input type=\"text\" id=\"nome\" v-model=\"cliente.nome\" />\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <label for=\"cpf\">CPF:</label>\r\n          <input type=\"text\" id=\"cpf\" v-model=\"cliente.cpf\" />\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <label for=\"telefone\">Telefone:</label>\r\n          <input type=\"text\" id=\"telefone\" v-model=\"cliente.telefone\" />\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <label for=\"email\">Email:</label>\r\n          <input type=\"email\" id=\"email\" v-model=\"cliente.email\" />\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <label for=\"formaPagamento\">Forma de Pagamento:</label>\r\n          <select id=\"formaPagamento\" v-model=\"cliente.formaPagamento\">\r\n            <!-- Opções de forma de pagamento aqui -->\r\n          </select>\r\n        </div>\r\n      </form>\r\n      <button @click=\"prevStep\">Voltar</button>\r\n      <button @click=\"nextStep\">Finalizar</button>\r\n    </div>\r\n    <div v-else-if=\"step === 3\">\r\n      <!-- Etapa 3: Dados de Pagamento (a ser implementado futuramente) -->\r\n      <h3>Dados de Pagamento</h3>\r\n      <!-- Dados de pagamento aqui -->\r\n      <button @click=\"prevStep\">Voltar</button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport jsCookie from 'js-cookie';\r\n\r\nexport default {\r\n  nome: \"CheckOut\",\r\n\r\n  data() {\r\n    return {\r\n      step: 1,\r\n      cart: [],\r\n\r\n      cliente: {\r\n        nome: \"\",\r\n        cpf: \"\",\r\n        telefone: \"\",\r\n        email: \"\",\r\n        formaPagamento: \"\",\r\n      },\r\n    };\r\n  },\r\n  methods: {\r\n    getCartProductsFromCookies() {\r\n    const cartCookieName = this.getCartCookieName();\r\n    if (cartCookieName) {\r\n      const cartData = Cookies.getJSON(cartCookieName);\r\n      if (cartData) {\r\n        this.cart = cartData;\r\n      }\r\n    }\r\n  },\r\n  getCartCookieName() {\r\n    return Cookies.get('cart'); // Substitua 'cart' pelo nome correto do seu cookie\r\n  },\r\n  created() {\r\n    this.getCartProductsFromCookies();\r\n  },\r\n    // Incrementa a quantidade de um item no carrinho\r\n    incrementQuantity(index) {\r\n      this.cart[index].quantity++;\r\n    },\r\n    // Decrementa a quantidade de um item no carrinho\r\n    decrementQuantity(index) {\r\n      if (this.cart[index].quantity > 1) {\r\n        this.cart[index].quantity--;\r\n      }\r\n    },\r\n    // Remove um item do carrinho\r\n    removeItem(index) {\r\n      this.cart.splice(index, 1);\r\n    },\r\n    // Calcula o valor total do carrinho\r\n    calculateTotal() {\r\n      return this.cart.reduce(\r\n        (total, item) => total + item.price * item.quantity,\r\n        0\r\n      );\r\n    },\r\n    nextStep() {\r\n      this.step++;\r\n    },\r\n    prevStep() {\r\n      this.step--;\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped lang=\"scss\">\r\ndiv {\r\n  text-align: center;\r\n  padding: 20px;\r\n}\r\n\r\nh2 {\r\n  font-size: 24px;\r\n  color: #333;\r\n}\r\n\r\n/* Estilo das etapas */\r\nh3 {\r\n  font-size: 20px;\r\n  color: #333;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n/* Botões */\r\nbutton {\r\n  background-color: #007bff;\r\n  color: #fff;\r\n  border: none;\r\n  padding: 10px 20px;\r\n  font-size: 16px;\r\n  margin: 10px;\r\n  cursor: pointer;\r\n  transition: background-color 0.3s ease;\r\n}\r\n\r\nbutton:hover {\r\n  background-color: #0056b3;\r\n}\r\n\r\n/* Formulário de cliente */\r\nform {\r\n  max-width: 400px;\r\n  margin: 0 auto;\r\n}\r\n\r\n.form-group {\r\n  margin-bottom: 20px;\r\n}\r\n\r\nlabel {\r\n  font-size: 16px;\r\n  color: #333;\r\n  display: block;\r\n  margin-bottom: 5px;\r\n}\r\n\r\ninput[type=\"text\"],\r\ninput[type=\"email\"],\r\nselect {\r\n  width: 100%;\r\n  padding: 10px;\r\n  font-size: 16px;\r\n  border: 1px solid #ccc;\r\n  border-radius: 5px;\r\n}\r\n\r\n// Lista de produtos \r\n.cart-table {\r\n  width: 100%;\r\n  border-collapse: collapse;\r\n  th,\r\n  td {\r\n    border: 1px solid #ccc;\r\n    padding: 8px;\r\n    text-align: center;\r\n  }\r\n  th {\r\n    background-color: #f2f2f2;\r\n  }\r\n  tr:nth-child(even) {\r\n    background-color: #f2f2f2;\r\n  }\r\n  button {\r\n    background-color: #007bff;\r\n    color: #fff;\r\n    border: none;\r\n    padding: 6px 10px;\r\n    font-size: 14px;\r\n    cursor: pointer;\r\n    transition: background-color 0.3s ease;\r\n  }\r\n  button:hover {\r\n    background-color: #0056b3;\r\n  }\r\n}\r\n\r\n/* Estilo do valor total */\r\n.total {\r\n  text-align: right;\r\n  margin-top: 10px;\r\n  font-size: 18px;\r\n}\r\n.green-text {\r\n  color: #4caf50;\r\n}\r\n\r\n/* Etapas ocultas */\r\n[v-cloak] {\r\n  display: none;\r\n}\r\n</style>\r\n"],"mappings":"AA+EA,OAAOA,QAAO,MAAO,WAAW;AAEhC,eAAe;EACbC,IAAI,EAAE,UAAU;EAEhBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,IAAI,EAAE,CAAC;MACPC,IAAI,EAAE,EAAE;MAERC,OAAO,EAAE;QACPJ,IAAI,EAAE,EAAE;QACRK,GAAG,EAAE,EAAE;QACPC,QAAQ,EAAE,EAAE;QACZC,KAAK,EAAE,EAAE;QACTC,cAAc,EAAE;MAClB;IACF,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACPC,0BAA0BA,CAAA,EAAG;MAC7B,MAAMC,cAAa,GAAI,IAAI,CAACC,iBAAiB,CAAC,CAAC;MAC/C,IAAID,cAAc,EAAE;QAClB,MAAME,QAAO,GAAIC,OAAO,CAACC,OAAO,CAACJ,cAAc,CAAC;QAChD,IAAIE,QAAQ,EAAE;UACZ,IAAI,CAACV,IAAG,GAAIU,QAAQ;QACtB;MACF;IACF,CAAC;IACDD,iBAAiBA,CAAA,EAAG;MAClB,OAAOE,OAAO,CAACE,GAAG,CAAC,MAAM,CAAC,EAAE;IAC9B,CAAC;;IACDC,OAAOA,CAAA,EAAG;MACR,IAAI,CAACP,0BAA0B,CAAC,CAAC;IACnC,CAAC;IACC;IACAQ,iBAAiBA,CAACC,KAAK,EAAE;MACvB,IAAI,CAAChB,IAAI,CAACgB,KAAK,CAAC,CAACC,QAAQ,EAAE;IAC7B,CAAC;IACD;IACAC,iBAAiBA,CAACF,KAAK,EAAE;MACvB,IAAI,IAAI,CAAChB,IAAI,CAACgB,KAAK,CAAC,CAACC,QAAO,GAAI,CAAC,EAAE;QACjC,IAAI,CAACjB,IAAI,CAACgB,KAAK,CAAC,CAACC,QAAQ,EAAE;MAC7B;IACF,CAAC;IACD;IACAE,UAAUA,CAACH,KAAK,EAAE;MAChB,IAAI,CAAChB,IAAI,CAACoB,MAAM,CAACJ,KAAK,EAAE,CAAC,CAAC;IAC5B,CAAC;IACD;IACAK,cAAcA,CAAA,EAAG;MACf,OAAO,IAAI,CAACrB,IAAI,CAACsB,MAAM,CACrB,CAACC,KAAK,EAAEC,IAAI,KAAKD,KAAI,GAAIC,IAAI,CAACC,KAAI,GAAID,IAAI,CAACP,QAAQ,EACnD,CACF,CAAC;IACH,CAAC;IACDS,QAAQA,CAAA,EAAG;MACT,IAAI,CAAC3B,IAAI,EAAE;IACb,CAAC;IACD4B,QAAQA,CAAA,EAAG;MACT,IAAI,CAAC5B,IAAI,EAAE;IACb;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}