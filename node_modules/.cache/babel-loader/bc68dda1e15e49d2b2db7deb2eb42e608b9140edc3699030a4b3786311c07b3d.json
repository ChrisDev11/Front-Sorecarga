{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createTextVNode as _createTextVNode, normalizeClass as _normalizeClass, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-c75588fa\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"panel\"\n};\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h3\", null, \"Carrinho\", -1 /* HOISTED */));\nconst _hoisted_3 = [\"onClick\"];\nexport function render(_ctx, _cache) {\n  return _openBlock(), _createElementBlock(\"div\", {\n    class: _normalizeClass([\"panel-wrap\", {\n      visible: _ctx.visible\n    }])\n  }, [_createElementVNode(\"div\", _hoisted_1, [_createElementVNode(\"div\", null, [_createElementVNode(\"button\", {\n    class: \"btn btn-danger\",\n    onClick: _cache[0] || (_cache[0] = $event => _ctx.closePanel())\n  }, \"Fechar\"), _createElementVNode(\"h2\", null, _toDisplayString(_ctx.title), 1 /* TEXT */)]), _createElementVNode(\"div\", null, [_hoisted_2, _createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.cart, item => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: item.id\n    }, [_createTextVNode(_toDisplayString(item.name) + \" (\" + _toDisplayString(item.quantity) + \") - R$ \" + _toDisplayString(item.price * item.quantity) + \" \", 1 /* TEXT */), _createElementVNode(\"button\", {\n      class: \"btn btn-danger\",\n      onClick: $event => _ctx.removeFromCart(item)\n    }, \"Remover\", 8 /* PROPS */, _hoisted_3)]);\n  }), 128 /* KEYED_FRAGMENT */))]), _createElementVNode(\"button\", {\n    class: \"btn btn-danger\",\n    onClick: _cache[1] || (_cache[1] = (...args) => _ctx.clearCart && _ctx.clearCart(...args))\n  }, \"Limpar\")])])], 2 /* CLASS */);\n}","map":{"version":3,"names":["class","_createElementVNode","_createElementBlock","_normalizeClass","visible","_ctx","_hoisted_1","onClick","_cache","$event","closePanel","_toDisplayString","title","_hoisted_2","_Fragment","_renderList","cart","item","key","id","name","quantity","price","removeFromCart","_hoisted_3","args","clearCart"],"sources":["C:\\Users\\11\\Desktop\\frontend\\src\\components\\SlidePanel.vue"],"sourcesContent":["<template>\r\n  <div class=\"panel-wrap\" :class=\"{ visible: visible}\">\r\n    <div class=\"panel\">\r\n      <div>\r\n        <button class=\"btn btn-danger\" @click=\"closePanel()\">Fechar</button>\r\n        <h2>{{ title }}</h2>\r\n      </div>\r\n      <div>\r\n        <h3>Carrinho</h3>\r\n        <ul>\r\n          <li v-for=\"item in cart\" :key=\"item.id\">\r\n            {{ item.name }} ({{ item.quantity }}) - R$ {{ item.price * item.quantity }}\r\n            <button class=\"btn btn-danger\" @click=\"removeFromCart(item)\">Remover</button>\r\n          </li>\r\n        </ul>\r\n        <button class=\"btn btn-danger\" @click=\"clearCart\">Limpar</button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n\r\nexport default {\r\n  import Vue\r\n  name: 'SlidePanel',\r\n  data(){\r\n    return{\r\n      cart:[],\r\n    }\r\n  },\r\n  props: {\r\n    title: {\r\n      type: String,\r\n      required: true,\r\n    },\r\n    visible: {\r\n      type: Boolean,\r\n      required: true,\r\n    },\r\n    cart:{\r\n      type: Array,\r\n      required: true,\r\n    }\r\n  },\r\n  emits: ['update:visible', 'update:cart'],\r\n  \r\n  methods: {\r\n    closePanel() {\r\n      this.$emit('update:visible', false);\r\n    },\r\n\r\n    removeFromCart(item) {\r\n      // Encontre o índice do item no carrinho\r\n      const index = this.cart.findIndex(cartItem => cartItem.id === item.id);\r\n\r\n      if (index !== -1) {\r\n        // Se o item existe no carrinho\r\n        if (this.cart[index].quantity > 1) {\r\n          // Se a quantidade for maior que 1, apenas diminua a quantidade em 1\r\n          this.cart[index].quantity--;\r\n        } else {\r\n          // Caso contrário, remova o item do carrinho\r\n          this.cart.splice(index, 1);\r\n        }\r\n\r\n        // Emita um evento para atualizar o carrinho no componente pai\r\n        this.$emit('update:cart', this.cart);\r\n      }\r\n    },\r\n    clearCart() {\r\n      // Limpa o carrinho (remove todos os itens)\r\n      this.cart = [];\r\n      // Emita um evento para atualizar o carrinho no componente pai\r\n      this.$emit('update:cart', this.cart);\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n\r\n\r\n<style lang=\"scss\" scoped>\r\n.panel {\r\n  position: absolute;\r\n  top: 0;\r\n  bottom: 0;\r\n  left: 0;\r\n  right: 0;\r\n  background-color: #333;\r\n  color: #eee;\r\n  overflow: auto;\r\n  padding: 1em;\r\n\r\n  &-wrap {\r\n    position: fixed;\r\n    top: 0;\r\n    bottom: 0;\r\n    right: 0;\r\n    width: 30em;\r\n    transform: translateX(100%);\r\n    transition: 0.3s ease-out;\r\n\r\n    &.visible {\r\n      transform: translateX(0);\r\n    }\r\n  }\r\n}\r\n</style>"],"mappings":";;;EAESA,KAAK,EAAC;AAAO;gEAMdC,mBAAA,CAAiB,YAAb,UAAQ;;;uBAPlBC,mBAAA,CAiBM;IAjBDF,KAAK,EAAAG,eAAA,EAAC,YAAY;MAAAC,OAAA,EAAoBC,IAAA,CAAAD;IAAO;MAChDH,mBAAA,CAeM,OAfNK,UAeM,GAdJL,mBAAA,CAGM,cAFJA,mBAAA,CAAoE;IAA5DD,KAAK,EAAC,gBAAgB;IAAEO,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEJ,IAAA,CAAAK,UAAU;KAAI,QAAM,GAC3DT,mBAAA,CAAoB,YAAAU,gBAAA,CAAbN,IAAA,CAAAO,KAAK,iB,GAEdX,mBAAA,CASM,cARJY,UAAiB,EACjBZ,mBAAA,CAKK,c,kBAJHC,mBAAA,CAGKY,SAAA,QAAAC,WAAA,CAHcV,IAAA,CAAAW,IAAI,EAAZC,IAAI;yBAAff,mBAAA,CAGK;MAHqBgB,GAAG,EAAED,IAAI,CAACE;0CAC/BF,IAAI,CAACG,IAAI,IAAG,IAAE,GAAAT,gBAAA,CAAGM,IAAI,CAACI,QAAQ,IAAG,SAAO,GAAAV,gBAAA,CAAGM,IAAI,CAACK,KAAK,GAAGL,IAAI,CAACI,QAAQ,IAAG,GAC3E,iBAAApB,mBAAA,CAA6E;MAArED,KAAK,EAAC,gBAAgB;MAAEO,OAAK,EAAAE,MAAA,IAAEJ,IAAA,CAAAkB,cAAc,CAACN,IAAI;OAAG,SAAO,iBAAAO,UAAA,E;oCAGxEvB,mBAAA,CAAiE;IAAzDD,KAAK,EAAC,gBAAgB;IAAEO,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAiB,IAAA,KAAEpB,IAAA,CAAAqB,SAAA,IAAArB,IAAA,CAAAqB,SAAA,IAAAD,IAAA,CAAS;KAAE,QAAM,E"},"metadata":{},"sourceType":"module","externalDependencies":[]}