{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport PayloadGenerator from \"./Pix/PayloadGenerator\";\nimport QRCode from \"./Qrcode/QRCode.vue\";\nimport Cookies from \"js-cookie\";\nimport jwtDecode from \"jwt-decode\";\nimport axios from \"axios\";\nexport default {\n  nome: \"CheckOut\",\n  components: {\n    QRCode\n  },\n  data() {\n    return {\n      step: 1,\n      cart: [],\n      payloadGenerated: null,\n      cliente: {\n        nome: \"\",\n        cpf: \"\",\n        telefone: \"\",\n        email: \"\",\n        formaPagamento: \"\"\n      },\n      jwtDecoded: null\n    };\n  },\n  created() {\n    // Recupere os dados do carrinho dos cookies\n    const cartData = Cookies.get(\"cart\");\n    if (cartData) {\n      this.cart = JSON.parse(cartData); // Converta o valor do cookie em um objeto JSON\n    }\n\n    const cartDataJSON = Cookies.get(\"cart\");\n    if (cartDataJSON) {\n      const cartData = JSON.parse(cartDataJSON);\n\n      // Extrai apenas os campos desejados e cria um novo array\n      const cartBuyData = cartData.map(item => {\n        return {\n          productId: item.id,\n          priceUn: item.price,\n          amount: item.quantity\n        };\n      });\n\n      // Salva os dados do carrinho de compra no cookie \"cartbuy\"\n      Cookies.set(\"cartbuy\", JSON.stringify(cartBuyData));\n    } else {\n      // Se não houver dados no cookie \"cart\", crie um cookie \"cartbuy\" vazio\n      Cookies.set(\"cartbuy\", \"[]\");\n    }\n    const jwtCookie = this.getCookie('authToken');\n\n    // Decode JWT token\n    if (jwtCookie) {\n      try {\n        const decodedToken = jwtDecode(jwtCookie);\n        if (decodedToken) {\n          this.jwtDecoded = decodedToken;\n          // Acesse o campo correto do JWT para obter o ID do usuário\n          const userId = decodedToken.Id; // Substitua 'sub' pelo campo correto em seu JWT\n          console.log(\"Token decodificado:\", decodedToken);\n          // Faça uma solicitação Axios para buscar os dados do usuário\n          axios.get(`https://localhost:3000/Users/${userId}`).then(response => {\n            // Preencha os dados do usuário no formulário com base na resposta\n            this.cliente = response.data;\n          }).catch(error => {\n            console.error(\"Erro ao buscar os dados do usuário:\", error);\n          });\n        }\n      } catch (error) {\n        console.error(\"Erro ao decodificar o JWT:\", error);\n      }\n    }\n  },\n  methods: {\n    getCookie(name) {\n      const value = `; ${document.cookie}`;\n      const parts = value.split(`; ${name}=`);\n      if (parts.length === 2) return parts.pop().split(\";\").shift();\n    },\n    generatePayloadAndProceedToNextStep() {\n      // Função para obter um cookie pelo nome\n      function getCookie(cookieName) {\n        const cookies = document.cookie.split(';');\n        for (const cookie of cookies) {\n          const [name, value] = cookie.trim().split('=');\n          if (name === cookieName) {\n            return decodeURIComponent(value);\n          }\n        }\n        return null;\n      }\n\n      // Obtenha os cookies cartBuyData\n      const cartBuyDataEncoded = getCookie('cartbuy');\n\n      // Certifique-se de que os cookies cartBuyData estejam presentes\n      if (cartBuyDataEncoded) {\n        try {\n          // Decodifique a string URL-encoded e, em seguida, analise-a como JSON\n          const cartData = JSON.parse(decodeURIComponent(cartBuyDataEncoded));\n\n          // Certifique-se de que a estrutura dos dados está correta\n          if (Array.isArray(cartData)) {\n            // Combine todos os dados do carrinho em um único objeto\n            const combinedCartData = {};\n            cartData.forEach(item => {\n              Object.assign(combinedCartData, item);\n            });\n\n            // Reorganize os campos como desejado\n            const reorderedCartData = {\n              productId: combinedCartData.productId,\n              purchaseId: combinedCartData.purchaseId,\n              priceUn: combinedCartData.priceUn\n            };\n            console.log(reorderedCartData);\n\n            // Faça a solicitação POST com os dados combinados e reorganizados do carrinho\n            axios.post('https://localhost:3000/cart', reorderedCartData, {\n              headers: {\n                'Content-Type': 'application/json'\n              }\n            }).then(response => {\n              // A solicitação foi bem-sucedida, você pode lidar com a resposta (opcional)\n              console.log('Dados do carrinho enviados com sucesso:', response.data);\n\n              // Avance para a próxima etapa, se necessário\n              this.step = 3;\n            }).catch(error => {\n              console.error('Erro ao enviar dados do carrinho:', error);\n              // Lidar com erros de forma apropriada (exibindo uma mensagem de erro, revertendo alterações, etc.)\n            });\n\n            // Chame o gerador de payload com os dados do cliente\n            const payloadGenerator = new PayloadGenerator();\n            payloadGenerator.setAmount(this.calculateTotal()); // Defina o valor de amount corretamente\n            // Configure os dados do cliente aqui\n            const payload = payloadGenerator.generatePayload(); // Use o método do gerador\n\n            // Exiba a payload gerada\n            this.payloadGenerated = payload;\n\n            // Em seguida, faça a solicitação PUT para salvar os dados do cliente no banco de dados\n            axios.put(`https://localhost:3000/Users/${this.jwtDecoded.Id}`, this.cliente).then(response => {\n              // A solicitação foi bem-sucedida, você pode lidar com a resposta (opcional)\n              console.log('Dados do cliente salvos com sucesso:', response.data);\n\n              // Avance para a etapa 3 (Dados de Pagamento)\n              this.step = 3;\n            }).catch(error => {\n              console.error('Erro ao salvar os dados do cliente:', error);\n              // Lidar com erros de forma apropriada (exibindo uma mensagem de erro, revertendo alterações, etc.)\n            });\n          } else {\n            console.error('A estrutura dos dados do carrinho é inválida.');\n          }\n        } catch (error) {\n          console.error('Erro ao analisar os dados do carrinho:', error);\n        }\n      } else {\n        console.error('Cookies cartBuyData não encontrados ou vazios.');\n      }\n    },\n    // Decrementa a quantidade de um item no carrinho\n    decrementQuantity(item) {\n      if (item.quantity > 1) {\n        item.quantity--;\n        this.updateCartCookie();\n      } else {\n        this.removeItemFromCart(this.cart.indexOf(item));\n      }\n    },\n    // Decrementa a quantidade de um item no carrinho\n    decrementQuantity(item) {\n      if (item.quantity > 1) {\n        item.quantity--;\n        this.updateCartCookie();\n      } else {\n        this.removeItemFromCart(this.cart.indexOf(item));\n      }\n    },\n    // Incrementa a quantidade de um item no carrinho\n    incrementQuantity(item) {\n      item.quantity++;\n      this.updateCartCookie();\n    },\n    // Remove um item específico do carrinho com base no índice\n    removeItemFromCart(index) {\n      this.cart.splice(index, 1);\n      this.updateCartCookie();\n    },\n    getCartCookieName() {\n      return Cookies.get(\"cart\");\n    },\n    updateCartCookie() {\n      const cartData = JSON.stringify(this.cart);\n      Cookies.set(\"cart\", cartData);\n    },\n    created() {\n      this.getCartProductsFromCookies();\n    },\n    // Calcula o valor total do carrinho\n    calculateTotal() {\n      return this.cart.reduce((total, item) => total + item.price * item.quantity, 0);\n    },\n    prevStep() {\n      this.step--;\n    },\n    async createPurchase() {\n      try {\n        // Decodifique o token JWT para obter o ID do usuário\n        const jwtDecoded = jwtDecode(this.getCookie(\"authToken\"));\n        const userId = jwtDecoded.Id;\n\n        // Construa o objeto de compra com os dados fornecidos\n        const purchaseData = {\n          buyDate: \"\",\n          // Use a data atual\n          payment: \"\",\n          // Substitua pelo método de pagamento desejado\n          status: \"Iniciado\",\n          userId: userId,\n          // Use o ID do usuário obtido do JWT\n          cartItems: []\n        };\n\n        // Faça uma solicitação POST para criar a compra\n        const response = await axios.post(\"https://localhost:3000/Purchase\", purchaseData, {\n          headers: {\n            \"Content-Type\": \"application/json\"\n          }\n        });\n\n        // Verifique se a resposta contém o ID da compra\n        const purchaseId = response.data.id; // Substitua 'Id' pelo campo correto em sua resposta JSON\n\n        // Avance para a próxima etapa após o sucesso\n        this.nextStep();\n\n        // Agora, adicione o purchaseId aos cookies 'cartbuy'\n        const existingData = Cookies.get(\"cartbuy\");\n\n        // Verifique se já há dados nos cookies 'cartbuy'\n        let cartBuyData = existingData ? JSON.parse(existingData) : [];\n\n        // Adicione o novo elemento 'purchaseId' ao array\n        cartBuyData.push({\n          purchaseId\n        });\n\n        // Salve os dados atualizados nos cookies 'cartbuy'\n        Cookies.set(\"cartbuy\", JSON.stringify(cartBuyData));\n        console.log('cartBuyData:', cartBuyData);\n      } catch (error) {\n        console.error(\"Erro ao registrar:\", error);\n        // Trate o erro adequadamente aqui, você pode exibir uma mensagem de erro para o usuário ou fazer outras ações necessárias.\n      }\n    },\n\n    nextStep() {\n      this.step++;\n    },\n    finalizeOrder() {\n      // Limpar os dados do carrinho (cart) dos cookies\n      Cookies.remove(\"cart\");\n\n      // Redirecionar para a página \"/home\"\n      this.$router.push(\"/\");\n    }\n  }\n};","map":{"version":3,"names":["PayloadGenerator","QRCode","Cookies","jwtDecode","axios","nome","components","data","step","cart","payloadGenerated","cliente","cpf","telefone","email","formaPagamento","jwtDecoded","created","cartData","get","JSON","parse","cartDataJSON","cartBuyData","map","item","productId","id","priceUn","price","amount","quantity","set","stringify","jwtCookie","getCookie","decodedToken","userId","Id","console","log","then","response","catch","error","methods","name","value","document","cookie","parts","split","length","pop","shift","generatePayloadAndProceedToNextStep","cookieName","cookies","trim","decodeURIComponent","cartBuyDataEncoded","Array","isArray","combinedCartData","forEach","Object","assign","reorderedCartData","purchaseId","post","headers","payloadGenerator","setAmount","calculateTotal","payload","generatePayload","put","decrementQuantity","updateCartCookie","removeItemFromCart","indexOf","incrementQuantity","index","splice","getCartCookieName","getCartProductsFromCookies","reduce","total","prevStep","createPurchase","purchaseData","buyDate","payment","status","cartItems","nextStep","existingData","push","finalizeOrder","remove","$router"],"sources":["C:\\Users\\11\\Desktop\\frontend\\src\\components\\CheckOut.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <h2>Check-out</h2>\r\n    <div v-if=\"step === 1\">\r\n      <!-- Etapa 1: Conferência de produtos -->\r\n      <h3>Conferência de Produtos</h3>\r\n      <table class=\"cart-table\">\r\n        <thead>\r\n          <tr>\r\n            <th>Produto</th>\r\n            <th>Preço Unitário</th>\r\n            <th>Quantidade</th>\r\n            <th>Total</th>\r\n            <th>Ações</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr v-for=\"(item, index) in cart\" :key=\"index\">\r\n            <td>{{ item.name }}</td>\r\n            <td>R$:{{ item.price.toFixed(2) }}</td>\r\n            <td>{{ item.quantity }}</td>\r\n            <td>R$:{{ item.quantity * item.price }}</td>\r\n            <td>\r\n              <button @click=\"decrementQuantity(item)\">-</button>\r\n              <button @click=\"incrementQuantity(item)\">+</button>\r\n              <button @click=\"removeItemFromCart(index)\">X</button>\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n      <div class=\"total\">\r\n        Total:\r\n        <span class=\"green-text\">R$ {{ calculateTotal().toFixed(2) }}</span>\r\n      </div>\r\n      <button @click=\"createPurchase()\">Prosseguir Compra</button>\r\n    </div>\r\n    <div v-else-if=\"step === 2\">\r\n      <!-- Etapa 2: Dados do Cliente -->\r\n      <h3>Dados do Cliente</h3>\r\n      <form>\r\n        <div class=\"form-group\">\r\n          <label for=\"nome\">Nome:</label>\r\n          <input type=\"text\" id=\"nome\" v-model=\"cliente.name\" />\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <label for=\"cpf\">CPF:</label>\r\n          <input type=\"text\" id=\"cpf\" v-model=\"cliente.cpf\" />\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <label for=\"telefone\">Telefone:</label>\r\n          <input type=\"text\" id=\"telefone\" v-model=\"cliente.phone\" />\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <label for=\"email\">Email:</label>\r\n          <input type=\"email\" id=\"email\" v-model=\"cliente.email\" />\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <label for=\"formaPagamento\">Forma de Pagamento:</label>\r\n          <select id=\"formaPagamento\" required>\r\n            <option value=\"pix\">PIX</option>\r\n          </select>\r\n        </div>\r\n      </form>\r\n      <button @click=\"prevStep\">Voltar</button>\r\n      <button @click=\"generatePayloadAndProceedToNextStep\">\r\n        Gerar Pagamento\r\n      </button>\r\n    </div>\r\n    <div v-else-if=\"step === 3\">\r\n      <!-- Etapa 3: Dados de Pagamento -->\r\n      <h3>Dados de Pagamento</h3>\r\n      <!-- Exibir a payload gerada aqui -->\r\n      <div v-if=\"payloadGenerated\">\r\n        <h4>Payload Pix Gerada:</h4>\r\n        <tr></tr>\r\n        <h3>Prazo para confirmação de pagamento de no Máximo 24 horas</h3>\r\n        <pre>{{ payloadGenerated }}</pre>\r\n        <div>\r\n          <h4>QR Code Pix:</h4>\r\n          <QRCode :value=\"payloadGenerated\" />\r\n        </div>\r\n      </div>\r\n      <button @click=\"finalizeOrder\">Finalizar</button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport PayloadGenerator from \"./Pix/PayloadGenerator\";\r\nimport QRCode from \"./Qrcode/QRCode.vue\";\r\nimport Cookies from \"js-cookie\";\r\nimport jwtDecode from \"jwt-decode\";\r\nimport axios from \"axios\";\r\n\r\nexport default {\r\n  nome: \"CheckOut\",\r\n  components: {\r\n    QRCode,\r\n  },\r\n\r\n  data() {\r\n    return {\r\n      step: 1,\r\n      cart: [],\r\n      payloadGenerated: null,\r\n\r\n      cliente: {\r\n        nome: \"\",\r\n        cpf: \"\",\r\n        telefone: \"\",\r\n        email: \"\",\r\n        formaPagamento: \"\",\r\n      },\r\n      jwtDecoded: null,\r\n    };\r\n  },\r\n  created() {\r\n    // Recupere os dados do carrinho dos cookies\r\n    const cartData = Cookies.get(\"cart\");\r\n    if (cartData) {\r\n      this.cart = JSON.parse(cartData); // Converta o valor do cookie em um objeto JSON\r\n    }\r\n\r\n    const cartDataJSON = Cookies.get(\"cart\");\r\n    \r\n  if (cartDataJSON) {\r\n    const cartData = JSON.parse(cartDataJSON);\r\n\r\n    // Extrai apenas os campos desejados e cria um novo array\r\n    const cartBuyData = cartData.map(item => {\r\n      return {\r\n        productId: item.id,\r\n        priceUn: item.price,\r\n        amount: item.quantity,\r\n       };\r\n    });\r\n\r\n    \r\n\r\n    // Salva os dados do carrinho de compra no cookie \"cartbuy\"\r\n    Cookies.set(\"cartbuy\", JSON.stringify(cartBuyData));\r\n  } else {\r\n    // Se não houver dados no cookie \"cart\", crie um cookie \"cartbuy\" vazio\r\n    Cookies.set(\"cartbuy\", \"[]\");\r\n  }\r\n    const jwtCookie = this.getCookie('authToken');\r\n\r\n// Decode JWT token\r\n    if (jwtCookie) {\r\n      try {\r\n        const decodedToken = jwtDecode(jwtCookie);\r\n\r\n        if (decodedToken) {\r\n          this.jwtDecoded = decodedToken;\r\n          // Acesse o campo correto do JWT para obter o ID do usuário\r\n          const userId = decodedToken.Id; // Substitua 'sub' pelo campo correto em seu JWT\r\n          console.log(\"Token decodificado:\", decodedToken);\r\n          // Faça uma solicitação Axios para buscar os dados do usuário\r\n          axios\r\n            .get(`https://localhost:3000/Users/${userId}`)\r\n            .then((response) => {\r\n              // Preencha os dados do usuário no formulário com base na resposta\r\n              this.cliente = response.data;\r\n            })\r\n            .catch((error) => {\r\n              console.error(\"Erro ao buscar os dados do usuário:\", error);\r\n            });\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Erro ao decodificar o JWT:\", error);\r\n      }\r\n    }\r\n    \r\n  },\r\n  methods: {\r\n    getCookie(name) {\r\n      const value = `; ${document.cookie}`;\r\n      const parts = value.split(`; ${name}=`);\r\n      if (parts.length === 2) return parts.pop().split(\";\").shift();\r\n    },\r\n\r\n\r\n\r\n    generatePayloadAndProceedToNextStep() {\r\n// Função para obter um cookie pelo nome\r\nfunction getCookie(cookieName) {\r\n  const cookies = document.cookie.split(';');\r\n  for (const cookie of cookies) {\r\n    const [name, value] = cookie.trim().split('=');\r\n    if (name === cookieName) {\r\n      return decodeURIComponent(value);\r\n    }\r\n  }\r\n  return null;\r\n}\r\n\r\n\r\n\r\n\r\n// Obtenha os cookies cartBuyData\r\nconst cartBuyDataEncoded = getCookie('cartbuy');\r\n\r\n// Certifique-se de que os cookies cartBuyData estejam presentes\r\nif (cartBuyDataEncoded) {\r\n  try {\r\n    // Decodifique a string URL-encoded e, em seguida, analise-a como JSON\r\n    const cartData = JSON.parse(decodeURIComponent(cartBuyDataEncoded));\r\n\r\n    // Certifique-se de que a estrutura dos dados está correta\r\n    if (Array.isArray(cartData)) {\r\n      // Combine todos os dados do carrinho em um único objeto\r\n      const combinedCartData = {};\r\n\r\n      cartData.forEach(item => {\r\n        Object.assign(combinedCartData, item);\r\n      });\r\n\r\n      // Reorganize os campos como desejado\r\n      const reorderedCartData = {\r\n        productId: combinedCartData.productId,\r\n        purchaseId: combinedCartData.purchaseId,\r\n        priceUn: combinedCartData.priceUn\r\n        \r\n        \r\n      };\r\n\r\n      console.log(reorderedCartData);\r\n\r\n      // Faça a solicitação POST com os dados combinados e reorganizados do carrinho\r\n      axios.post('https://localhost:3000/cart', reorderedCartData, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      })\r\n      .then(response => {\r\n        // A solicitação foi bem-sucedida, você pode lidar com a resposta (opcional)\r\n        console.log('Dados do carrinho enviados com sucesso:', response.data);\r\n\r\n        // Avance para a próxima etapa, se necessário\r\n        this.step = 3;\r\n      })\r\n      .catch(error => {\r\n        console.error('Erro ao enviar dados do carrinho:', error);\r\n        // Lidar com erros de forma apropriada (exibindo uma mensagem de erro, revertendo alterações, etc.)\r\n      });\r\n\r\n\r\n\r\n        // Chame o gerador de payload com os dados do cliente\r\n  const payloadGenerator = new PayloadGenerator();\r\n  payloadGenerator.setAmount(this.calculateTotal()); // Defina o valor de amount corretamente\r\n  // Configure os dados do cliente aqui\r\n  const payload = payloadGenerator.generatePayload(); // Use o método do gerador\r\n\r\n  // Exiba a payload gerada\r\n  this.payloadGenerated = payload;\r\n\r\n  // Em seguida, faça a solicitação PUT para salvar os dados do cliente no banco de dados\r\n  axios.put(`https://localhost:3000/Users/${this.jwtDecoded.Id}`, this.cliente)\r\n    .then(response => {\r\n      // A solicitação foi bem-sucedida, você pode lidar com a resposta (opcional)\r\n      console.log('Dados do cliente salvos com sucesso:', response.data);\r\n      \r\n      // Avance para a etapa 3 (Dados de Pagamento)\r\n      this.step = 3;\r\n    })\r\n    .catch(error => {\r\n      console.error('Erro ao salvar os dados do cliente:', error);\r\n      // Lidar com erros de forma apropriada (exibindo uma mensagem de erro, revertendo alterações, etc.)\r\n    });\r\n      } else {\r\n        console.error('A estrutura dos dados do carrinho é inválida.');\r\n      }\r\n    } catch (error) {\r\n      console.error('Erro ao analisar os dados do carrinho:', error);\r\n    }\r\n  } else {\r\n    console.error('Cookies cartBuyData não encontrados ou vazios.');\r\n  }\r\n\r\n},\r\n\r\n\r\n\r\n    // Decrementa a quantidade de um item no carrinho\r\n    decrementQuantity(item) {\r\n      if (item.quantity > 1) {\r\n        item.quantity--;\r\n        this.updateCartCookie();\r\n      } else {\r\n        this.removeItemFromCart(this.cart.indexOf(item));\r\n      }\r\n    },\r\n\r\n\r\n\r\n    // Decrementa a quantidade de um item no carrinho\r\n    decrementQuantity(item) {\r\n      if (item.quantity > 1) {\r\n        item.quantity--;\r\n        this.updateCartCookie();\r\n      } else {\r\n        this.removeItemFromCart(this.cart.indexOf(item));\r\n      }\r\n    },\r\n\r\n\r\n\r\n    // Incrementa a quantidade de um item no carrinho\r\n    incrementQuantity(item) {\r\n      item.quantity++;\r\n      this.updateCartCookie();\r\n    },\r\n\r\n\r\n\r\n    // Remove um item específico do carrinho com base no índice\r\n    removeItemFromCart(index) {\r\n      this.cart.splice(index, 1);\r\n      this.updateCartCookie();\r\n    },\r\n\r\n\r\n    getCartCookieName() {\r\n      return Cookies.get(\"cart\");\r\n    },\r\n\r\n\r\n\r\n    updateCartCookie() {\r\n      const cartData = JSON.stringify(this.cart);\r\n      Cookies.set(\"cart\", cartData);\r\n    },\r\n\r\n\r\n\r\n    created() {\r\n      this.getCartProductsFromCookies();\r\n    },\r\n\r\n\r\n\r\n    // Calcula o valor total do carrinho\r\n    calculateTotal() {\r\n      return this.cart.reduce(\r\n        (total, item) => total + item.price * item.quantity,\r\n        0\r\n      );\r\n    },\r\n\r\n\r\n    prevStep() {\r\n      this.step--;\r\n    },\r\n\r\n\r\n\r\n   async createPurchase() {\r\n  try {\r\n    // Decodifique o token JWT para obter o ID do usuário\r\n    const jwtDecoded = jwtDecode(this.getCookie(\"authToken\"));\r\n    const userId = jwtDecoded.Id;\r\n\r\n    // Construa o objeto de compra com os dados fornecidos\r\n    const purchaseData = {\r\n      buyDate: \"\", // Use a data atual\r\n      payment: \"\", // Substitua pelo método de pagamento desejado\r\n      status: \"Iniciado\",\r\n      userId: userId, // Use o ID do usuário obtido do JWT\r\n      cartItems: [],\r\n    };\r\n\r\n    // Faça uma solicitação POST para criar a compra\r\n    const response = await axios.post(\r\n      \"https://localhost:3000/Purchase\",\r\n      purchaseData,\r\n      {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      }\r\n    );\r\n\r\n    // Verifique se a resposta contém o ID da compra\r\n    const purchaseId = response.data.id; // Substitua 'Id' pelo campo correto em sua resposta JSON\r\n    \r\n\r\n    // Avance para a próxima etapa após o sucesso\r\n    this.nextStep();\r\n\r\n    // Agora, adicione o purchaseId aos cookies 'cartbuy'\r\n    const existingData = Cookies.get(\"cartbuy\");\r\n\r\n    // Verifique se já há dados nos cookies 'cartbuy'\r\n    let cartBuyData = existingData ? JSON.parse(existingData) : [];\r\n\r\n    // Adicione o novo elemento 'purchaseId' ao array\r\n    cartBuyData.push({ purchaseId });\r\n\r\n    // Salve os dados atualizados nos cookies 'cartbuy'\r\n    Cookies.set(\"cartbuy\", JSON.stringify(cartBuyData));\r\n    console.log('cartBuyData:', cartBuyData);\r\n  } catch (error) {\r\n    console.error(\"Erro ao registrar:\", error);\r\n    // Trate o erro adequadamente aqui, você pode exibir uma mensagem de erro para o usuário ou fazer outras ações necessárias.\r\n  }\r\n},\r\n\r\n\r\n\r\n\r\n    nextStep() {\r\n      this.step++;\r\n    },\r\n    finalizeOrder() {\r\n      // Limpar os dados do carrinho (cart) dos cookies\r\n      Cookies.remove(\"cart\");\r\n\r\n      // Redirecionar para a página \"/home\"\r\n      this.$router.push(\"/\");\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped lang=\"scss\">\r\ndiv {\r\n  text-align: center;\r\n  padding: 20px;\r\n}\r\n\r\nh2 {\r\n  font-size: 24px;\r\n  color: #333;\r\n}\r\n\r\n/* Estilo das etapas */\r\nh3 {\r\n  font-size: 20px;\r\n  color: #333;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n/* Botões */\r\nbutton {\r\n  background-color: #007bff;\r\n  color: #fff;\r\n  border: none;\r\n  padding: 10px 20px;\r\n  font-size: 16px;\r\n  margin: 10px;\r\n  cursor: pointer;\r\n  transition: background-color 0.3s ease;\r\n}\r\n\r\nbutton:hover {\r\n  background-color: #0056b3;\r\n}\r\n\r\n/* Formulário de cliente */\r\nform {\r\n  max-width: 400px;\r\n  margin: 0 auto;\r\n}\r\n\r\n.form-group {\r\n  margin-bottom: 20px;\r\n}\r\n\r\nlabel {\r\n  font-size: 16px;\r\n  color: #333;\r\n  display: block;\r\n  margin-bottom: 5px;\r\n}\r\n\r\ninput[type=\"text\"],\r\ninput[type=\"email\"],\r\nselect {\r\n  width: 100%;\r\n  padding: 10px;\r\n  font-size: 16px;\r\n  border: 1px solid #ccc;\r\n  border-radius: 5px;\r\n}\r\n\r\n// Lista de produtos\r\n.cart-table {\r\n  width: 100%;\r\n  border-collapse: collapse;\r\n  th,\r\n  td {\r\n    border: 1px solid #ccc;\r\n    padding: 8px;\r\n    text-align: center;\r\n  }\r\n  th {\r\n    background-color: #f2f2f2;\r\n  }\r\n  tr:nth-child(even) {\r\n    background-color: #f2f2f2;\r\n  }\r\n  button {\r\n    background-color: #007bff;\r\n    color: #fff;\r\n    border: none;\r\n    padding: 6px 10px;\r\n    font-size: 14px;\r\n    cursor: pointer;\r\n    transition: background-color 0.3s ease;\r\n  }\r\n  button:hover {\r\n    background-color: #0056b3;\r\n  }\r\n}\r\n\r\n/* Estilo do valor total */\r\n.total {\r\n  text-align: right;\r\n  margin-top: 10px;\r\n  font-size: 18px;\r\n}\r\n.green-text {\r\n  color: #4caf50;\r\n}\r\n\r\n/* Etapas ocultas */\r\n[v-cloak] {\r\n  display: none;\r\n}\r\n</style>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}