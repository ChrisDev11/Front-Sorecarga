{"ast":null,"code":"import Cookies from \"js-cookie\";\nexport default {\n  nome: \"CheckOut\",\n  data() {\n    return {\n      step: 1,\n      cart: [],\n      cliente: {\n        nome: \"\",\n        cpf: \"\",\n        telefone: \"\",\n        email: \"\",\n        formaPagamento: \"\"\n      }\n    };\n  },\n  created() {\n    // Recupere os dados do carrinho dos cookies\n    const cartData = Cookies.get(\"cart\");\n    if (cartData) {\n      this.cart = JSON.parse(cartData); // Converta o valor do cookie em um objeto JSON\n    }\n  },\n\n  methods: {\n    // Decrementa a quantidade de um item no carrinho\n    decrementQuantity(item) {\n      if (item.quantity > 1) {\n        item.quantity--;\n        this.updateCartCookie();\n      } else {\n        this.removeItemFromCart(this.cart.indexOf(item));\n      }\n    },\n    // Incrementa a quantidade de um item no carrinho\n    incrementQuantity(item) {\n      item.quantity++;\n      this.updateCartCookie();\n    },\n    // Remove um item específico do carrinho com base no índice\n    removeItemFromCart(index) {\n      this.cart.splice(index, 1);\n      this.updateCartCookie();\n    },\n    getCartCookieName() {\n      return Cookies.get(\"cart\");\n    },\n    updateCartCookie() {\n      const cartData = JSON.stringify(this.cart);\n      Cookies.set(\"cart\", cartData);\n    },\n    created() {\n      this.getCartProductsFromCookies();\n    },\n    // Calcula o valor total do carrinho\n    calculateTotal() {\n      return this.cart.reduce((total, item) => total + item.price * item.quantity, 0);\n    },\n    nextStep() {\n      this.step++;\n    },\n    prevStep() {\n      this.step--;\n    }\n  }\n};","map":{"version":3,"names":["Cookies","nome","data","step","cart","cliente","cpf","telefone","email","formaPagamento","created","cartData","get","JSON","parse","methods","decrementQuantity","item","quantity","updateCartCookie","removeItemFromCart","indexOf","incrementQuantity","index","splice","getCartCookieName","stringify","set","getCartProductsFromCookies","calculateTotal","reduce","total","price","nextStep","prevStep"],"sources":["C:\\Users\\11\\Desktop\\frontend\\src\\components\\CheckOut.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <h2>Check-out</h2>\r\n    <div v-if=\"step === 1\">\r\n      <!-- Etapa 1: Conferência de produtos -->\r\n      <h3>Conferência de Produtos</h3>\r\n      <table class=\"cart-table\">\r\n        <thead>\r\n          <tr>\r\n            <th>Produto</th>\r\n            <th>Preço Unitário</th>\r\n            <th>Quantidade</th>\r\n            <th>Total</th>\r\n            <th>Ações</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr v-for=\"(item, index) in cart\" :key=\"index\">\r\n            <td>{{ item.name }}</td>\r\n            <td>R$:{{ item.price.toFixed(2) }}</td>\r\n            <td>{{ item.quantity }}</td>\r\n            <td>R$:{{ item.quantity * item.price }}</td>\r\n            <td>\r\n              <button @click=\"decrementQuantity(item)\">-</button>\r\n              <button @click=\"incrementQuantity(item)\">+</button>\r\n              <button @click=\"removeItemFromCart(index)\">X</button>\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n      <div class=\"total\">\r\n        Total:\r\n        <span class=\"green-text\">R$ {{ calculateTotal().toFixed(2) }}</span>\r\n      </div>\r\n      <button @click=\"nextStep\">Prosseguir Compra</button>\r\n    </div>\r\n    <div v-else-if=\"step === 2\">\r\n      <!-- Etapa 2: Dados do Cliente -->\r\n      <h3>Dados do Cliente</h3>\r\n      <form>\r\n        <div class=\"form-group\">\r\n          <label for=\"nome\">Nome:</label>\r\n          <input type=\"text\" id=\"nome\" v-model=\"cliente.nome\" />\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <label for=\"cpf\">CPF:</label>\r\n          <input type=\"text\" id=\"cpf\" v-model=\"cliente.cpf\" />\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <label for=\"telefone\">Telefone:</label>\r\n          <input type=\"text\" id=\"telefone\" v-model=\"cliente.telefone\" />\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <label for=\"email\">Email:</label>\r\n          <input type=\"email\" id=\"email\" v-model=\"cliente.email\" />\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <label for=\"formaPagamento\">Forma de Pagamento:</label>\r\n          <select id=\"formaPagamento\" v-model=\"cliente.formaPagamento\">\r\n            <!-- Opções de forma de pagamento aqui -->\r\n          </select>\r\n        </div>\r\n      </form>\r\n      <button @click=\"prevStep\">Voltar</button>\r\n      <button @click=\"nextStep\">Finalizar</button>\r\n    </div>\r\n    <div v-else-if=\"step === 3\">\r\n      <!-- Etapa 3: Dados de Pagamento (a ser implementado futuramente) -->\r\n      <h3>Dados de Pagamento</h3>\r\n      <!-- Dados de pagamento aqui -->\r\n      <button @click=\"prevStep\">Voltar</button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport Cookies from \"js-cookie\";\r\n\r\nexport default {\r\n  nome: \"CheckOut\",\r\n\r\n  data() {\r\n    return {\r\n      step: 1,\r\n      cart: [],\r\n\r\n      cliente: {\r\n        nome: \"\",\r\n        cpf: \"\",\r\n        telefone: \"\",\r\n        email: \"\",\r\n        formaPagamento: \"\",\r\n      },\r\n    };\r\n  },\r\n  created() {\r\n    // Recupere os dados do carrinho dos cookies\r\n    const cartData = Cookies.get(\"cart\");\r\n    if (cartData) {\r\n      this.cart = JSON.parse(cartData); // Converta o valor do cookie em um objeto JSON\r\n    }\r\n  },\r\n  methods: {\r\n    // Decrementa a quantidade de um item no carrinho\r\n    decrementQuantity(item) {\r\n      if (item.quantity > 1) {\r\n        item.quantity--;\r\n        this.updateCartCookie();\r\n      } else {\r\n        this.removeItemFromCart(this.cart.indexOf(item));\r\n      }\r\n    },\r\n    // Incrementa a quantidade de um item no carrinho\r\n    incrementQuantity(item) {\r\n      item.quantity++;\r\n      this.updateCartCookie();\r\n    },\r\n    \r\n\r\n    // Remove um item específico do carrinho com base no índice\r\n    removeItemFromCart(index) {\r\n      this.cart.splice(index, 1);\r\n      this.updateCartCookie();\r\n    },\r\n    getCartCookieName() {\r\n      return Cookies.get(\"cart\");\r\n    },\r\n    updateCartCookie() {\r\n      const cartData = JSON.stringify(this.cart);\r\n      Cookies.set(\"cart\", cartData);\r\n    },\r\n    created() {\r\n      this.getCartProductsFromCookies();\r\n    },\r\n    // Calcula o valor total do carrinho\r\n    calculateTotal() {\r\n      return this.cart.reduce(\r\n        (total, item) => total + item.price * item.quantity,\r\n        0\r\n      );\r\n    },\r\n    nextStep() {\r\n      this.step++;\r\n    },\r\n    prevStep() {\r\n      this.step--;\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped lang=\"scss\">\r\ndiv {\r\n  text-align: center;\r\n  padding: 20px;\r\n}\r\n\r\nh2 {\r\n  font-size: 24px;\r\n  color: #333;\r\n}\r\n\r\n/* Estilo das etapas */\r\nh3 {\r\n  font-size: 20px;\r\n  color: #333;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n/* Botões */\r\nbutton {\r\n  background-color: #007bff;\r\n  color: #fff;\r\n  border: none;\r\n  padding: 10px 20px;\r\n  font-size: 16px;\r\n  margin: 10px;\r\n  cursor: pointer;\r\n  transition: background-color 0.3s ease;\r\n}\r\n\r\nbutton:hover {\r\n  background-color: #0056b3;\r\n}\r\n\r\n/* Formulário de cliente */\r\nform {\r\n  max-width: 400px;\r\n  margin: 0 auto;\r\n}\r\n\r\n.form-group {\r\n  margin-bottom: 20px;\r\n}\r\n\r\nlabel {\r\n  font-size: 16px;\r\n  color: #333;\r\n  display: block;\r\n  margin-bottom: 5px;\r\n}\r\n\r\ninput[type=\"text\"],\r\ninput[type=\"email\"],\r\nselect {\r\n  width: 100%;\r\n  padding: 10px;\r\n  font-size: 16px;\r\n  border: 1px solid #ccc;\r\n  border-radius: 5px;\r\n}\r\n\r\n// Lista de produtos\r\n.cart-table {\r\n  width: 100%;\r\n  border-collapse: collapse;\r\n  th,\r\n  td {\r\n    border: 1px solid #ccc;\r\n    padding: 8px;\r\n    text-align: center;\r\n  }\r\n  th {\r\n    background-color: #f2f2f2;\r\n  }\r\n  tr:nth-child(even) {\r\n    background-color: #f2f2f2;\r\n  }\r\n  button {\r\n    background-color: #007bff;\r\n    color: #fff;\r\n    border: none;\r\n    padding: 6px 10px;\r\n    font-size: 14px;\r\n    cursor: pointer;\r\n    transition: background-color 0.3s ease;\r\n  }\r\n  button:hover {\r\n    background-color: #0056b3;\r\n  }\r\n}\r\n\r\n/* Estilo do valor total */\r\n.total {\r\n  text-align: right;\r\n  margin-top: 10px;\r\n  font-size: 18px;\r\n}\r\n.green-text {\r\n  color: #4caf50;\r\n}\r\n\r\n/* Etapas ocultas */\r\n[v-cloak] {\r\n  display: none;\r\n}\r\n</style>\r\n"],"mappings":"AA4EA,OAAOA,OAAM,MAAO,WAAW;AAE/B,eAAe;EACbC,IAAI,EAAE,UAAU;EAEhBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,IAAI,EAAE,CAAC;MACPC,IAAI,EAAE,EAAE;MAERC,OAAO,EAAE;QACPJ,IAAI,EAAE,EAAE;QACRK,GAAG,EAAE,EAAE;QACPC,QAAQ,EAAE,EAAE;QACZC,KAAK,EAAE,EAAE;QACTC,cAAc,EAAE;MAClB;IACF,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR;IACA,MAAMC,QAAO,GAAIX,OAAO,CAACY,GAAG,CAAC,MAAM,CAAC;IACpC,IAAID,QAAQ,EAAE;MACZ,IAAI,CAACP,IAAG,GAAIS,IAAI,CAACC,KAAK,CAACH,QAAQ,CAAC,EAAE;IACpC;EACF,CAAC;;EACDI,OAAO,EAAE;IACP;IACAC,iBAAiBA,CAACC,IAAI,EAAE;MACtB,IAAIA,IAAI,CAACC,QAAO,GAAI,CAAC,EAAE;QACrBD,IAAI,CAACC,QAAQ,EAAE;QACf,IAAI,CAACC,gBAAgB,CAAC,CAAC;MACzB,OAAO;QACL,IAAI,CAACC,kBAAkB,CAAC,IAAI,CAAChB,IAAI,CAACiB,OAAO,CAACJ,IAAI,CAAC,CAAC;MAClD;IACF,CAAC;IACD;IACAK,iBAAiBA,CAACL,IAAI,EAAE;MACtBA,IAAI,CAACC,QAAQ,EAAE;MACf,IAAI,CAACC,gBAAgB,CAAC,CAAC;IACzB,CAAC;IAGD;IACAC,kBAAkBA,CAACG,KAAK,EAAE;MACxB,IAAI,CAACnB,IAAI,CAACoB,MAAM,CAACD,KAAK,EAAE,CAAC,CAAC;MAC1B,IAAI,CAACJ,gBAAgB,CAAC,CAAC;IACzB,CAAC;IACDM,iBAAiBA,CAAA,EAAG;MAClB,OAAOzB,OAAO,CAACY,GAAG,CAAC,MAAM,CAAC;IAC5B,CAAC;IACDO,gBAAgBA,CAAA,EAAG;MACjB,MAAMR,QAAO,GAAIE,IAAI,CAACa,SAAS,CAAC,IAAI,CAACtB,IAAI,CAAC;MAC1CJ,OAAO,CAAC2B,GAAG,CAAC,MAAM,EAAEhB,QAAQ,CAAC;IAC/B,CAAC;IACDD,OAAOA,CAAA,EAAG;MACR,IAAI,CAACkB,0BAA0B,CAAC,CAAC;IACnC,CAAC;IACD;IACAC,cAAcA,CAAA,EAAG;MACf,OAAO,IAAI,CAACzB,IAAI,CAAC0B,MAAM,CACrB,CAACC,KAAK,EAAEd,IAAI,KAAKc,KAAI,GAAId,IAAI,CAACe,KAAI,GAAIf,IAAI,CAACC,QAAQ,EACnD,CACF,CAAC;IACH,CAAC;IACDe,QAAQA,CAAA,EAAG;MACT,IAAI,CAAC9B,IAAI,EAAE;IACb,CAAC;IACD+B,QAAQA,CAAA,EAAG;MACT,IAAI,CAAC/B,IAAI,EAAE;IACb;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}